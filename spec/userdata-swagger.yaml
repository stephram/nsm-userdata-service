swagger: "2.0"
info:
  description: User Data service for storing and querying user interactions.
  title: User Data Service
  contact:
    email: stephram@gmail.com
  license:
    name: Stephen Graham
  version: 1.0.1
schemes:
  - http
securityDefinitions:
  Basic:
    type: basic
  ApiKey:
    type: apiKey
    in: header
    name: api-key
security:
  - ApiKey: []
    Basic: []
host: localhost:8080
basePath: /
paths:
  /userdata/v1/health:
    get:
      description: Health check
      operationId: getHealth
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/HealthResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiError'

  /userdata/v1/info:
    get:
      description: Information
      operationId: getInfo
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/InfoResponse'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiError'

  /userdata/v1/user/{tokenId}:
    get:
      description: Get the User
      operationId: getUser
      produces:
        - application/json
      parameters:
        - name: tokenId
          type: string
          description: The unique tokenId (nfcId) of the user
          in: path
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiError'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ApiError'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiError'

  /userdata/v1/user:
    post:
      description: Create or Update the user
      operationId: postUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user
          description: The User for the tokenId
          schema:
            $ref: '#/definitions/User'
          in: body
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/User'
        201:
          description: Created
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiError'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ApiError'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiError'

  /userdata/v1/console/interactions/{tokenId}:
    get:
      description: GetInteractions for tokenId
      operationId: getInteractions
      produces:
        - application/json
      parameters:
        - name: tokenId
          type: string
          in: path
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ConsoleInteractions'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiError'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ApiError'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiError'

  /userdata/v1/console/interactions:
    post:
      description: PostInteraction for tokenId
      operationId: postInteraction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: interaction
          schema:
            $ref: '#/definitions/ConsoleInteraction'
          in: body
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ConsoleInteraction'
        201:
          description: Created
          schema:
            $ref: '#/definitions/ConsoleInteraction'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiError'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ApiError'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiError'

  /userdata/v1/gameon/results/{tokenId}:
    get:
      description: Get GameOnResults for tokenId
      operationId: getGameOnResults
      produces:
        - application/json
      parameters:
        - name: tokenId
          type: string
          in: path
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/GameOnResults'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiError'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ApiError'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiError'

    post:
      description: Post / Update GameOnResults
      operationId: postGameOnResults
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: tokenId
          type: string
          in: path
          required: true
        - name: exhibitId
          type: string
          in: header
        - name: gameOnResults
          schema:
            $ref: '#/definitions/GameOnResults'
          in: body
          required: true
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/GameOnResults'
        201:
          description: Created
          schema:
            $ref: '#/definitions/GameOnResults'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ApiError'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/ApiError'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/ApiError'

definitions:
  ApiError:
    type: object
    properties:
      code:
        type: integer
        format: int
        description: Internal error code
      message:
        type: string
        description: Descriptive message
    required:
      - code
      - message

  User:
    type: object
    properties:
      tokenId:
        type: string
      avatarId:
        type: string
      name:
        type: string
      groupId:
        type: string
      isChild:
        type: boolean
    required:
      - tokenId

  ConsoleInteractions:
    type: array
    items:
      $ref: '#/definitions/ConsoleInteraction'

  ConsoleInteraction:
    type: object
    properties:
      exhibitId:
        type: string
      tokenId:
        type: string
      interaction:
        type: string
    required:
      - exhibitId
      - tokenId

  GameOnResults:
    type: object
    properties:
      basketballPoints:
        type: number
      classicCatchVideo:
        type: string
      cycleDistance:
        type: number
      horsePosition:
        type: number
      netballPoints:
        type: number
      pressureCookerScore:
        type: number
      reactionTime:
        type: number
      rugbyLeagueGoals:
        type: number
      rugbyUnionGoals:
        type: number
      soccerGoals:
        type: number
      surfingTime:
        type: number
      youMakeTheRulesPostcard:
        type: string
      youMakeTheRulesVisited:
        type: boolean

  HealthResponse:
    type: object
    required:
      - status
    properties:
      status:
        type: string

  InfoResponse:
    type: object
    properties:
      name:
        type: string
      branchName:
        type: string
      buildDate:
        type: string
      gitCommit:
        type: string
      version:
        type: string
      author:
        type: string
    required:
      - name
      - buildDate
      - branchName
      - gitCommit
      - version
      - author
