// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "User Data service for storing and querying user interactions.",
    "title": "User Data Service",
    "contact": {
      "email": "support@artprocessors.net"
    },
    "license": {
      "name": "Art Processors Pty. Ltd.",
      "url": "https://www.artprocessors.net/licensing"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/userdata/v1/avatar/{tokenID}": {
      "get": {
        "description": "Get the Avatar associated with the tokenID",
        "produces": [
          "application/json"
        ],
        "operationId": "getAvatarForTokenID",
        "parameters": [
          {
            "type": "string",
            "name": "tokenID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "description": "Store the Avatar associated with the tokenID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "postAvatarForTokenID",
        "parameters": [
          {
            "type": "string",
            "name": "tokenID",
            "in": "path",
            "required": true
          },
          {
            "name": "avatar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/userdata/v1/health": {
      "get": {
        "description": "Health check",
        "produces": [
          "application/json"
        ],
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/userdata/v1/interactions/{exhibitID}/{tokenID}": {
      "get": {
        "description": "Get the interaction data for the exhibitID and tokenID",
        "produces": [
          "application/json"
        ],
        "operationId": "getInteractions",
        "parameters": [
          {
            "type": "string",
            "description": "The unique and static ID of the exhibit",
            "name": "exhibitID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The unique tokenID of the user",
            "name": "tokenID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interaction"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "description": "Store the interaction data for the exhibitID and tokenID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "postInteractions",
        "parameters": [
          {
            "type": "string",
            "description": "The unique and static ID of the exhibit",
            "name": "exhibitID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The unique tokenID of the user",
            "name": "tokenID",
            "in": "path",
            "required": true
          },
          {
            "description": "The interaction data",
            "name": "interactions",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "interactions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Interaction"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interaction"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/userdata/v1/status/{tokenID}": {
      "get": {
        "description": "Get the status related to the tokenID",
        "produces": [
          "application/json"
        ],
        "operationId": "getStatusByTokenID",
        "parameters": [
          {
            "type": "string",
            "description": "The unique tokenID of the User",
            "name": "tokenID",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 100,
            "description": "Only return data up to this limit",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserData"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Internal error code",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Descriptive message",
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "string",
          "format": "application/json"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Avatar": {
      "type": "object",
      "properties": {
        "definition": {
          "type": "string",
          "format": "application/json"
        },
        "token_id": {
          "type": "string"
        }
      }
    },
    "HealthResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "Interaction": {
      "type": "object",
      "properties": {
        "interaction": {
          "type": "string",
          "format": "application/json"
        },
        "token_id": {
          "type": "string"
        }
      }
    },
    "UserData": {
      "type": "object",
      "properties": {
        "creation_timestamp": {
          "type": "string",
          "format": "datetime"
        },
        "group_id": {
          "type": "string"
        },
        "interactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Interaction"
          }
        },
        "is_child": {
          "type": "boolean"
        },
        "modified_timestamp": {
          "type": "string",
          "format": "datetime"
        },
        "token_id": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "User Data service for storing and querying user interactions.",
    "title": "User Data Service",
    "contact": {
      "email": "support@artprocessors.net"
    },
    "license": {
      "name": "Art Processors Pty. Ltd.",
      "url": "https://www.artprocessors.net/licensing"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/userdata/v1/avatar/{tokenID}": {
      "get": {
        "description": "Get the Avatar associated with the tokenID",
        "produces": [
          "application/json"
        ],
        "operationId": "getAvatarForTokenID",
        "parameters": [
          {
            "type": "string",
            "name": "tokenID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "description": "Store the Avatar associated with the tokenID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "postAvatarForTokenID",
        "parameters": [
          {
            "type": "string",
            "name": "tokenID",
            "in": "path",
            "required": true
          },
          {
            "name": "avatar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Avatar"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/userdata/v1/health": {
      "get": {
        "description": "Health check",
        "produces": [
          "application/json"
        ],
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HealthResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/userdata/v1/interactions/{exhibitID}/{tokenID}": {
      "get": {
        "description": "Get the interaction data for the exhibitID and tokenID",
        "produces": [
          "application/json"
        ],
        "operationId": "getInteractions",
        "parameters": [
          {
            "type": "string",
            "description": "The unique and static ID of the exhibit",
            "name": "exhibitID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The unique tokenID of the user",
            "name": "tokenID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interaction"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "description": "Store the interaction data for the exhibitID and tokenID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "postInteractions",
        "parameters": [
          {
            "type": "string",
            "description": "The unique and static ID of the exhibit",
            "name": "exhibitID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The unique tokenID of the user",
            "name": "tokenID",
            "in": "path",
            "required": true
          },
          {
            "description": "The interaction data",
            "name": "interactions",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "interactions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Interaction"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Interaction"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/userdata/v1/status/{tokenID}": {
      "get": {
        "description": "Get the status related to the tokenID",
        "produces": [
          "application/json"
        ],
        "operationId": "getStatusByTokenID",
        "parameters": [
          {
            "type": "string",
            "description": "The unique tokenID of the User",
            "name": "tokenID",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int32",
            "default": 100,
            "description": "Only return data up to this limit",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserData"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Internal error code",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "Descriptive message",
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "string",
          "format": "application/json"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Avatar": {
      "type": "object",
      "properties": {
        "definition": {
          "type": "string",
          "format": "application/json"
        },
        "token_id": {
          "type": "string"
        }
      }
    },
    "HealthResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "Interaction": {
      "type": "object",
      "properties": {
        "interaction": {
          "type": "string",
          "format": "application/json"
        },
        "token_id": {
          "type": "string"
        }
      }
    },
    "UserData": {
      "type": "object",
      "properties": {
        "creation_timestamp": {
          "type": "string",
          "format": "datetime"
        },
        "group_id": {
          "type": "string"
        },
        "interactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Interaction"
          }
        },
        "is_child": {
          "type": "boolean"
        },
        "modified_timestamp": {
          "type": "string",
          "format": "datetime"
        },
        "token_id": {
          "type": "string"
        }
      }
    }
  }
}`))
}
