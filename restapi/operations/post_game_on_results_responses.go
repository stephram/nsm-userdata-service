// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/stephram/nsm-userdata-service/restapi/models"
)

// PostGameOnResultsOKCode is the HTTP code returned for type PostGameOnResultsOK
const PostGameOnResultsOKCode int = 200

/*PostGameOnResultsOK Ok

swagger:response postGameOnResultsOK
*/
type PostGameOnResultsOK struct {

	/*
	  In: Body
	*/
	Payload *models.GameOnResults `json:"body,omitempty"`
}

// NewPostGameOnResultsOK creates PostGameOnResultsOK with default headers values
func NewPostGameOnResultsOK() *PostGameOnResultsOK {

	return &PostGameOnResultsOK{}
}

// WithPayload adds the payload to the post game on results o k response
func (o *PostGameOnResultsOK) WithPayload(payload *models.GameOnResults) *PostGameOnResultsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post game on results o k response
func (o *PostGameOnResultsOK) SetPayload(payload *models.GameOnResults) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGameOnResultsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostGameOnResultsCreatedCode is the HTTP code returned for type PostGameOnResultsCreated
const PostGameOnResultsCreatedCode int = 201

/*PostGameOnResultsCreated Created

swagger:response postGameOnResultsCreated
*/
type PostGameOnResultsCreated struct {

	/*
	  In: Body
	*/
	Payload *models.GameOnResults `json:"body,omitempty"`
}

// NewPostGameOnResultsCreated creates PostGameOnResultsCreated with default headers values
func NewPostGameOnResultsCreated() *PostGameOnResultsCreated {

	return &PostGameOnResultsCreated{}
}

// WithPayload adds the payload to the post game on results created response
func (o *PostGameOnResultsCreated) WithPayload(payload *models.GameOnResults) *PostGameOnResultsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post game on results created response
func (o *PostGameOnResultsCreated) SetPayload(payload *models.GameOnResults) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGameOnResultsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostGameOnResultsBadRequestCode is the HTTP code returned for type PostGameOnResultsBadRequest
const PostGameOnResultsBadRequestCode int = 400

/*PostGameOnResultsBadRequest Invalid request

swagger:response postGameOnResultsBadRequest
*/
type PostGameOnResultsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostGameOnResultsBadRequest creates PostGameOnResultsBadRequest with default headers values
func NewPostGameOnResultsBadRequest() *PostGameOnResultsBadRequest {

	return &PostGameOnResultsBadRequest{}
}

// WithPayload adds the payload to the post game on results bad request response
func (o *PostGameOnResultsBadRequest) WithPayload(payload *models.APIError) *PostGameOnResultsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post game on results bad request response
func (o *PostGameOnResultsBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGameOnResultsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostGameOnResultsNotFoundCode is the HTTP code returned for type PostGameOnResultsNotFound
const PostGameOnResultsNotFoundCode int = 404

/*PostGameOnResultsNotFound Not found

swagger:response postGameOnResultsNotFound
*/
type PostGameOnResultsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostGameOnResultsNotFound creates PostGameOnResultsNotFound with default headers values
func NewPostGameOnResultsNotFound() *PostGameOnResultsNotFound {

	return &PostGameOnResultsNotFound{}
}

// WithPayload adds the payload to the post game on results not found response
func (o *PostGameOnResultsNotFound) WithPayload(payload *models.APIError) *PostGameOnResultsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post game on results not found response
func (o *PostGameOnResultsNotFound) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGameOnResultsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostGameOnResultsInternalServerErrorCode is the HTTP code returned for type PostGameOnResultsInternalServerError
const PostGameOnResultsInternalServerErrorCode int = 500

/*PostGameOnResultsInternalServerError Internal server error

swagger:response postGameOnResultsInternalServerError
*/
type PostGameOnResultsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewPostGameOnResultsInternalServerError creates PostGameOnResultsInternalServerError with default headers values
func NewPostGameOnResultsInternalServerError() *PostGameOnResultsInternalServerError {

	return &PostGameOnResultsInternalServerError{}
}

// WithPayload adds the payload to the post game on results internal server error response
func (o *PostGameOnResultsInternalServerError) WithPayload(payload *models.APIError) *PostGameOnResultsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post game on results internal server error response
func (o *PostGameOnResultsInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostGameOnResultsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
