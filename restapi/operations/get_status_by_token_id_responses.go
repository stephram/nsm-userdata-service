// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/artprocessors/nsm-microservice-golang-userdata/restapi/models"
)

// GetStatusByTokenIDOKCode is the HTTP code returned for type GetStatusByTokenIDOK
const GetStatusByTokenIDOKCode int = 200

/*GetStatusByTokenIDOK Ok

swagger:response getStatusByTokenIdOK
*/
type GetStatusByTokenIDOK struct {

	/*
	  In: Body
	*/
	Payload []*models.UserData `json:"body,omitempty"`
}

// NewGetStatusByTokenIDOK creates GetStatusByTokenIDOK with default headers values
func NewGetStatusByTokenIDOK() *GetStatusByTokenIDOK {

	return &GetStatusByTokenIDOK{}
}

// WithPayload adds the payload to the get status by token Id o k response
func (o *GetStatusByTokenIDOK) WithPayload(payload []*models.UserData) *GetStatusByTokenIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status by token Id o k response
func (o *GetStatusByTokenIDOK) SetPayload(payload []*models.UserData) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusByTokenIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.UserData, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetStatusByTokenIDBadRequestCode is the HTTP code returned for type GetStatusByTokenIDBadRequest
const GetStatusByTokenIDBadRequestCode int = 400

/*GetStatusByTokenIDBadRequest Invalid request

swagger:response getStatusByTokenIdBadRequest
*/
type GetStatusByTokenIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetStatusByTokenIDBadRequest creates GetStatusByTokenIDBadRequest with default headers values
func NewGetStatusByTokenIDBadRequest() *GetStatusByTokenIDBadRequest {

	return &GetStatusByTokenIDBadRequest{}
}

// WithPayload adds the payload to the get status by token Id bad request response
func (o *GetStatusByTokenIDBadRequest) WithPayload(payload *models.APIError) *GetStatusByTokenIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status by token Id bad request response
func (o *GetStatusByTokenIDBadRequest) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusByTokenIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatusByTokenIDNotFoundCode is the HTTP code returned for type GetStatusByTokenIDNotFound
const GetStatusByTokenIDNotFoundCode int = 404

/*GetStatusByTokenIDNotFound Not found

swagger:response getStatusByTokenIdNotFound
*/
type GetStatusByTokenIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetStatusByTokenIDNotFound creates GetStatusByTokenIDNotFound with default headers values
func NewGetStatusByTokenIDNotFound() *GetStatusByTokenIDNotFound {

	return &GetStatusByTokenIDNotFound{}
}

// WithPayload adds the payload to the get status by token Id not found response
func (o *GetStatusByTokenIDNotFound) WithPayload(payload *models.APIError) *GetStatusByTokenIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status by token Id not found response
func (o *GetStatusByTokenIDNotFound) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusByTokenIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatusByTokenIDInternalServerErrorCode is the HTTP code returned for type GetStatusByTokenIDInternalServerError
const GetStatusByTokenIDInternalServerErrorCode int = 500

/*GetStatusByTokenIDInternalServerError Internal Server Error

swagger:response getStatusByTokenIdInternalServerError
*/
type GetStatusByTokenIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIError `json:"body,omitempty"`
}

// NewGetStatusByTokenIDInternalServerError creates GetStatusByTokenIDInternalServerError with default headers values
func NewGetStatusByTokenIDInternalServerError() *GetStatusByTokenIDInternalServerError {

	return &GetStatusByTokenIDInternalServerError{}
}

// WithPayload adds the payload to the get status by token Id internal server error response
func (o *GetStatusByTokenIDInternalServerError) WithPayload(payload *models.APIError) *GetStatusByTokenIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status by token Id internal server error response
func (o *GetStatusByTokenIDInternalServerError) SetPayload(payload *models.APIError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusByTokenIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
